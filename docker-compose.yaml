
services:
  db:
    image: postgres
    restart: always
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - local_pgdata:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  # web:
  #   build: .
  #   command: gunicorn oracard.wsgi:application --bind 0.0.0.0:8000
  #   volumes:
  #     - .:/app
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - db
  #   environment:
  #     DJANGO_SUPERUSER_USERNAME: admin
  #     DJANGO_SUPERUSER_EMAIL: admin@example.com
  #     DJANGO_SUPERUSER_PASSWORD: adminpass123
  #     POSTGRES_DB: ${DB_NAME}
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_HOST: db
  #     POSTGRES_PORT: 5432

  django:
    build: .
    volumes:
      - .:/app
    ports:
      - "8877:8877"

    labels:
      # - traefik.enable=true
      # - "traefik.http.routers.<unique_router_name>.rule=Host(`lab.riccardo.top`) && PathPrefix(`/`)"
      # - traefik.http.routers.<unique_router_name>.entryPoints=http

      - "traefik.enable=true"
      - "traefik.http.routers.myrouter.rule=Host(`lab.riccardo.top`) && PathPrefix(`/`)"
      - "traefik.http.routers.myrouter.entryPoints=http"
      - "traefik.http.routers.myrouter.middlewares=https-redirect"
      - "traefik.http.routers.myrouter-secure.rule=Host(`lab.riccardo.top`) && PathPrefix(`/`)"
      - "traefik.http.routers.myrouter-secure.entryPoints=https"
      - "traefik.http.routers.myrouter-secure.tls=true"
      - "traefik.http.routers.myrouter-secure.tls.certresolver=myresolver"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
    depends_on:
      - db
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: 5432

  grafana:
    image: grafana/grafana:latest
    user: "0:0"
    # environment:
    #   GF_DATABASE_TYPE: postgres
    #   GF_DATABASE_HOST: db:5432
    #   GF_DATABASE_NAME: ${DB_NAME}
    #   GF_DATABASE_USER: ${DB_USER}
    #   GF_DATABASE_PASSWORD: ${DB_PASSWORD}
    #   GF_DATABASE_SSL_MODE: disable
    restart: unless-stopped
    depends_on:
        - db
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - grafana:/var/lib/grafana
volumes:
  local_pgdata:
  pgadmin-data:
  grafana: